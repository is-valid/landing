window.fLine={},function(){var e={isEmail:function(e){return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)},isNumber:function(e){return/^\d+$/.test(e)},isNotEmpty:function(e){return Boolean(e)}};fLine.validation=e}(),function(){var o={},e=document.querySelector(".form-container"),n=null;function t(){o.close(),n.removeEventListener("click",t)}o.open=function(){e.classList.remove("is-hidden"),(n=document.querySelector(".form__close-button")).addEventListener("click",t)},o.close=function(){e.classList.add("is-hidden")},o.isValid=function(){var e=document.querySelectorAll('[data-valid="required"]'),n=document.querySelector("[data-email]").value,t=document.querySelector("[data-number]").value;return o.isAllCompleted(e)?ITVDN.validation.isEmail(n)?!!ITVDN.validation.isNumber(t)||(console.log("Не верный номер"),!1):(console.log("Не верный email"),!1):(console.log("Заполните пожалуйста все необходимые поля"),!1)},o.isAllCompleted=function(e){for(var n=!0,t=0;t<e.length;t++)if(!ITVDN.validation.isNotEmpty(e[t].value)){n=!1;break}return n},fLine.form=o}(),function(){var e={};e.toggleToActiveLink=function(e){for(var n,t,o,i=document.querySelectorAll(".nav__link"),l=e.dataset.link,a=0;a<i.length;a++)i[a].classList.contains("nav__link--active")&&i[a].classList.remove("nav__link--active");e.classList.add("nav__link--active"),n=l,t=document.querySelector("."+n).getBoundingClientRect(),o=setInterval(function(){document.documentElement.scrollTop<t.top?window.scrollBy(0,10):clearInterval(o)},.4)},fLine.navigation=e}(),function(){var e=document.querySelector(".arrow-down"),n=document.querySelector(".form"),t=document.querySelector(".nav");e&&e.addEventListener("click",function(e){e.preventDefault(),fLine.form.open()}),n&&n.addEventListener("submit",function(e){e.preventDefault(),fLine.form.isValid()?console.log("All good"):console.log("Is not valid")}),t&&t.addEventListener("click",function(e){var n=e.target;"a"===n.tagName.toLowerCase()&&(e.preventDefault(),fLine.navigation.toggleToActiveLink(n))})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
